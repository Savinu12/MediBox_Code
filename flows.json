[
    {
        "id": "dd08ba9a96a08f6e",
        "type": "tab",
        "label": "Flow 4",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1562b3583d25671d",
        "type": "ui_gauge",
        "z": "dd08ba9a96a08f6e",
        "name": "",
        "group": "445360c64b8aacbc",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperature gauge",
        "label": "units",
        "format": "{{value}}",
        "min": "-40",
        "max": "80",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 650,
        "y": 60,
        "wires": []
    },
    {
        "id": "29decd1791455e8a",
        "type": "ui_chart",
        "z": "dd08ba9a96a08f6e",
        "name": "",
        "group": "445360c64b8aacbc",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Temperature",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "cubic",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 630,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "e82cf35a66842854",
        "type": "mqtt in",
        "z": "dd08ba9a96a08f6e",
        "name": "",
        "topic": "220473X_servo_angle",
        "qos": "0",
        "datatype": "auto",
        "broker": "abc05d44a1b776f1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 920,
        "wires": [
            [
                "466a8e072d3f315b"
            ]
        ]
    },
    {
        "id": "466a8e072d3f315b",
        "type": "ui_gauge",
        "z": "dd08ba9a96a08f6e",
        "name": "Servo Angle",
        "group": "b31f2a29a0e39d83",
        "order": 1,
        "width": 6,
        "height": 4,
        "gtype": "gage",
        "title": "Servo Angle",
        "label": "value",
        "format": "{{value | number:0}}Â°",
        "min": 0,
        "max": 180,
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "60",
        "seg2": "120",
        "diff": false,
        "className": "",
        "x": 630,
        "y": 920,
        "wires": []
    },
    {
        "id": "3c8265095d64333e",
        "type": "mqtt in",
        "z": "dd08ba9a96a08f6e",
        "name": "",
        "topic": "220473X_Temperature",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "abc05d44a1b776f1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 280,
        "y": 140,
        "wires": [
            [
                "1562b3583d25671d",
                "29decd1791455e8a"
            ]
        ]
    },
    {
        "id": "509ebc5a1e2079fd",
        "type": "ui_chart",
        "z": "dd08ba9a96a08f6e",
        "name": "Light Intensity Plot",
        "group": "6d1b9a335226040b",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "Average Intensity",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "15",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2310,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "7c0a0de0ed8847bf",
        "type": "mqtt in",
        "z": "dd08ba9a96a08f6e",
        "name": "",
        "topic": "220473X_Light_Intensity",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "abc05d44a1b776f1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1530,
        "y": 220,
        "wires": [
            [
                "2c8e0d9ea0d08c9c",
                "abe341de2c9c144c"
            ]
        ]
    },
    {
        "id": "124d8e037cef2e46",
        "type": "trigger",
        "z": "dd08ba9a96a08f6e",
        "name": "Default Starting Parameters Trigger",
        "op1": "{\"sampling_interval\":5,\"sending_interval\":120,\"theta_offset\":30,\"controlling_Factor\":0.75,\"T_med\":30}",
        "op2": "0",
        "op1type": "json",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 200,
        "y": 580,
        "wires": [
            [
                "63fefd3660fca8dd",
                "df5e84a4aea79d4d",
                "43b3d519b803a452",
                "c136df76262e5f42",
                "cf3f5ae087a0235e"
            ]
        ]
    },
    {
        "id": "63fefd3660fca8dd",
        "type": "function",
        "z": "dd08ba9a96a08f6e",
        "name": "filter_sampling_interval",
        "func": "\n    msg.payload = [\"Sampling_interval\"]\n    return msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 360,
        "wires": [
            [
                "34ee876af262e88c"
            ]
        ]
    },
    {
        "id": "df5e84a4aea79d4d",
        "type": "function",
        "z": "dd08ba9a96a08f6e",
        "name": "filter_sending_interval",
        "func": "msg.payload = [\"sending_interval\"]\n    return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 480,
        "wires": [
            [
                "0fe3bed5ab0285fe"
            ]
        ]
    },
    {
        "id": "34ee876af262e88c",
        "type": "ui_numeric",
        "z": "dd08ba9a96a08f6e",
        "name": "LDR-sampling interval in seconds",
        "label": "sampling_interval",
        "tooltip": "",
        "group": "392e8a41efadf84d",
        "order": 1,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "msg",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "1",
        "max": "60",
        "step": 1,
        "className": "",
        "x": 1000,
        "y": 260,
        "wires": [
            [
                "2c8e0d9ea0d08c9c",
                "90023c053cdbc9d5"
            ]
        ]
    },
    {
        "id": "0fe3bed5ab0285fe",
        "type": "ui_numeric",
        "z": "dd08ba9a96a08f6e",
        "name": "LDR-Sending Interval in minutes",
        "label": "sending_interval",
        "tooltip": "",
        "group": "392e8a41efadf84d",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "payload",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "1",
        "max": "60",
        "step": 1,
        "className": "",
        "x": 990,
        "y": 480,
        "wires": [
            [
                "0a1557c262d1e47b",
                "2c8e0d9ea0d08c9c"
            ]
        ]
    },
    {
        "id": "90023c053cdbc9d5",
        "type": "mqtt out",
        "z": "dd08ba9a96a08f6e",
        "name": "",
        "topic": "220473X_sampling_interval",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "abc05d44a1b776f1",
        "x": 1420,
        "y": 100,
        "wires": []
    },
    {
        "id": "0a1557c262d1e47b",
        "type": "mqtt out",
        "z": "dd08ba9a96a08f6e",
        "name": "",
        "topic": "220473X_sending_interval",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "abc05d44a1b776f1",
        "x": 1500,
        "y": 480,
        "wires": []
    },
    {
        "id": "abe341de2c9c144c",
        "type": "ui_gauge",
        "z": "dd08ba9a96a08f6e",
        "name": "Light Intensity Gauge",
        "group": "6d1b9a335226040b",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Normal Intensity Value",
        "label": "",
        "format": "{{value}}",
        "min": 0,
        "max": "1",
        "colors": [
            "#e6e600",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "0.33",
        "seg2": "0.66",
        "diff": false,
        "className": "",
        "x": 1920,
        "y": 120,
        "wires": []
    },
    {
        "id": "c136df76262e5f42",
        "type": "function",
        "z": "dd08ba9a96a08f6e",
        "name": "filter_controlling_factor",
        "func": "msg.payload = [\"Controlling_Factor\"]\n    return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 640,
        "wires": [
            [
                "3feca2e94a13c2e6"
            ]
        ]
    },
    {
        "id": "43b3d519b803a452",
        "type": "function",
        "z": "dd08ba9a96a08f6e",
        "name": "filter_theta_offset",
        "func": "msg.payload = [\"Theta_offset\"]\n    return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 560,
        "wires": [
            [
                "93d95f1fb5a2a44f"
            ]
        ]
    },
    {
        "id": "5a6b05769b0db38a",
        "type": "mqtt out",
        "z": "dd08ba9a96a08f6e",
        "name": "",
        "topic": "220473X_Theta-Offset",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "abc05d44a1b776f1",
        "x": 1480,
        "y": 560,
        "wires": []
    },
    {
        "id": "df1eb51c8d115f70",
        "type": "mqtt out",
        "z": "dd08ba9a96a08f6e",
        "name": "",
        "topic": "220473X_Controlling_Factor",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "abc05d44a1b776f1",
        "x": 1500,
        "y": 640,
        "wires": []
    },
    {
        "id": "93d95f1fb5a2a44f",
        "type": "ui_slider",
        "z": "dd08ba9a96a08f6e",
        "name": "Enter the theta offset angle",
        "label": "Enter offset theta angle",
        "tooltip": "",
        "group": "392e8a41efadf84d",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "msg",
        "topicType": "msg",
        "min": 0,
        "max": "120",
        "step": "1",
        "className": "",
        "x": 980,
        "y": 560,
        "wires": [
            [
                "5a6b05769b0db38a"
            ]
        ]
    },
    {
        "id": "3feca2e94a13c2e6",
        "type": "ui_slider",
        "z": "dd08ba9a96a08f6e",
        "name": "Controlling_Factor_Slider",
        "label": "Controlling Factor",
        "tooltip": "",
        "group": "392e8a41efadf84d",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "msg",
        "topicType": "msg",
        "min": 0,
        "max": "1",
        "step": "0.01",
        "className": "",
        "x": 970,
        "y": 640,
        "wires": [
            [
                "df1eb51c8d115f70"
            ]
        ]
    },
    {
        "id": "cf3f5ae087a0235e",
        "type": "function",
        "z": "dd08ba9a96a08f6e",
        "name": "filter_T_med",
        "func": "msg.payload = [\"T_med\"]\n    return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 780,
        "wires": [
            [
                "8a4e382f1cdccc27"
            ]
        ]
    },
    {
        "id": "81ca522cd91a7b98",
        "type": "mqtt out",
        "z": "dd08ba9a96a08f6e",
        "name": "",
        "topic": "220473X_T-MED",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "abc05d44a1b776f1",
        "x": 1470,
        "y": 780,
        "wires": []
    },
    {
        "id": "8a4e382f1cdccc27",
        "type": "ui_slider",
        "z": "dd08ba9a96a08f6e",
        "name": "Enter the T_med",
        "label": "Enter T_med",
        "tooltip": "",
        "group": "392e8a41efadf84d",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "msg",
        "topicType": "msg",
        "min": "10",
        "max": "40",
        "step": "1",
        "className": "",
        "x": 990,
        "y": 780,
        "wires": [
            [
                "81ca522cd91a7b98"
            ]
        ]
    },
    {
        "id": "2c8e0d9ea0d08c9c",
        "type": "function",
        "z": "dd08ba9a96a08f6e",
        "name": "Processing LDR Readings through function",
        "func": "// Load stored flow variables or set default values\nlet samplingInterval = flow.get(\"samplingInterval\") || 5; // Sampling period in seconds\nlet sendingInterval = flow.get(\"sendingInterval\") || 120; // Data transmission interval in seconds (2 minutes default)\n\nlet ldrReadings = flow.get(\"ldrReadings\") || []; // Array to store LDR sensor readings\nlet lastSentTime = flow.get(\"lastSentTime\") || 0; // Timestamp of the last data transmission\nlet now = new Date().getTime(); // Current timestamp in milliseconds\n\n// Append the new LDR reading to the array\nldrReadings.push(msg.payload);\n\n// Save the updated LDR readings back to flow storage\nflow.set(\"ldrReadings\", ldrReadings);\n\n// Trim the readings array to keep only the relevant data within the sending interval\nlet maxReadings = sendingInterval / samplingInterval; // Maximum number of readings to store\nif (ldrReadings.length > maxReadings) {\n    ldrReadings = ldrReadings.slice(-maxReadings); // Keep only the most recent readings\n    flow.set(\"ldrReadings\", ldrReadings); // Update stored readings\n}\n\n// Determine if it's time to transmit the averaged data\nif (now - lastSentTime >= sendingInterval * 1000) {\n    // Calculate the average of the stored LDR readings\n    let sum = ldrReadings.reduce((a, b) => a + b, 0); // Sum all readings\n    let average = sum / ldrReadings.length; // Compute mean\n\n    // Scale the average to a 0-1 range, assuming LDR values are 0-1023\n    let normalized = Math.min(1, Math.max(0, average / 1023));\n\n    // Record the current time as the last transmission time\n    flow.set(\"lastSentTime\", now);\n\n    // Output the normalized average as the message payload\n    return { payload: normalized };\n}\n\n// Return null if it's not yet time to send data\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1990,
        "y": 340,
        "wires": [
            [
                "509ebc5a1e2079fd",
                "bc4f3211b0e65971"
            ]
        ]
    },
    {
        "id": "bc4f3211b0e65971",
        "type": "ui_text",
        "z": "dd08ba9a96a08f6e",
        "group": "6d1b9a335226040b",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "Average Intensity Value",
        "label": "Average Intensity Value",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2330,
        "y": 220,
        "wires": []
    },
    {
        "id": "5cdddd056f7a56db",
        "type": "ui_spacer",
        "z": "dd08ba9a96a08f6e",
        "name": "spacer",
        "group": "3eb20bfc52a4c9ec",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "d7a582f21e88a495",
        "type": "ui_spacer",
        "z": "dd08ba9a96a08f6e",
        "name": "spacer",
        "group": "3eb20bfc52a4c9ec",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "445360c64b8aacbc",
        "type": "ui_group",
        "name": "Temperature",
        "tab": "56ecf445ac9e95b2",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "abc05d44a1b776f1",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "tls": "",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "b31f2a29a0e39d83",
        "type": "ui_group",
        "name": "Servo angle",
        "tab": "56ecf445ac9e95b2",
        "order": 6,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "6d1b9a335226040b",
        "type": "ui_group",
        "name": "Internsity",
        "tab": "56ecf445ac9e95b2",
        "order": 5,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "392e8a41efadf84d",
        "type": "ui_group",
        "name": "Parameters",
        "tab": "56ecf445ac9e95b2",
        "order": 3,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "56ecf445ac9e95b2",
        "type": "ui_tab",
        "name": "Medi-Box",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]